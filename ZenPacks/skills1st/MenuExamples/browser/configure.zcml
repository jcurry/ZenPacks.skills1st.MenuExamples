<?xml version="1.0" encoding="utf-8"?>
<configure xmlns="http://namespaces.zope.org/browser">

    <!-- A resource directory contains static web content. -->
    <!-- example is simply a unique name. The directory "resources" is directly under this directory -->
    <!-- The name "example" in the resourceDirectory stanza must match what follows ++resource++ in viewlet -->

    <resourceDirectory
        name="example"
        directory="resources"
        />

    <!-- Register custom JavaScript for ExampleDevices.  -->
    <!-- name field can be nearly anything unique 
         If paths uses /++resource++ then following variable matches resourceDirectory name
                and can provide a path down from there eg. /js/
         The filename, ending in .js, does not have to match anything other than the actual file
         The for statement says only to use this javascript viewlet for devices of object class
             ExampleDevice (the 2nd ExampleDevice), defined in the file ExampleDevice (1st ExampleDevice)
             that is located one directory up from here ie       ..       -->

    <viewlet
        name="js-exampledevice"
        paths="/++resource++example/js/ExampleDevice.js"
        weight="10"
        for="..ExampleDevice.ExampleDevice"
        manager="Products.ZenUI3.browser.interfaces.IJavaScriptSrcManager"
        class="Products.ZenUI3.browser.javascript.JavaScriptSrcBundleViewlet"
        permission="zope2.Public"
        />

    <!-- This amazing viewlet uses a for stanza to apply to all types of devices
         Note that the manager stanza is interfaces.IHeadExtraManager
         This adds in an extra dropdown menu for Components from the Display box
    -->

    <viewlet
        name="js-amazing-componentoption"
        paths="/++resource++example/js/amazing.js"
        weight="9"
        for="Products.ZenModel.Device.Device"
        manager="Products.ZenUI3.browser.interfaces.IHeadExtraManager"
        class="Products.ZenUI3.browser.javascript.JavaScriptSrcBundleViewlet"
        permission="zope2.Public"
        />

    <!-- Define an add device entry
    -->
    <viewlet
        name="js-add_example_device_option"
        paths="/++resource++example/js/add_example_device_option.js"
        weight="10"
        manager="Products.ZenUI3.browser.interfaces.IJavaScriptSrcManager"
        class="Products.ZenUI3.browser.javascript.JavaScriptSrcBundleViewlet"
        permission="zope2.Public"
        />

    <!-- Define a new entry on the Action "gear cog wheel" menu
         for the device list page
    -->
    <viewlet
        name="js-my-action-menu-item"
        paths="/++resource++example/js/run_my_predefined_command.js"
        weight="10"
        manager="Products.ZenUI3.browser.interfaces.IJavaScriptSrcManager"
        class="Products.ZenUI3.browser.javascript.JavaScriptSrcBundleViewlet"
        permission="zope2.Public"
        />

    <!-- Add a command window for showing ouput for a command run from an action menu
         The name parameter ties in with the "target" field in the js handler
         In the class field, .. takes you back to the ZenPack base directory where
         there must be a file called command.py..........
         which contains a class called MyPredefinedCommandView
    -->

    <page
        name="run_my_predefined_command"
        for="*"
        class="..command.MyPredefinedCommandView"
        permission="zenoss.ManageDevice"
        />

    <!-- Define a viewlet that puts up a new footer bar menu
         The action is defined in myFooterMenu.js under the js subdir in the resources subdirectory
         The weight field doesn't seem to change the position of this option on the
         footer bar but don't set weight="1" or it doesn't show up at all
    -->

      <viewlet
          name="js-myFooterMenu"
          paths="/++resource++example/js/myFooterMenu.js"
          weight="4"
          manager="Products.ZenUI3.browser.interfaces.IJavaScriptSrcManager"
          class="Products.ZenUI3.browser.javascript.JavaScriptSrcBundleViewlet"
          permission="zope2.Public"
          />

      <!-- Add an item to the "gear" Action menu for a specific device
           Note the IHeadExtraManager in the manager field

           for field makes this menu applicable to all device classes
              ie. any class under Device
      -->

      <viewlet
          name="device-gear-menu"
          paths="/++resource++example/js/deviceGearMenu.js"
          weight="9"
          for="Products.ZenModel.Device.Device"
          manager="Products.ZenUI3.browser.interfaces.IHeadExtraManager"
          class="Products.ZenUI3.browser.javascript.JavaScriptSrcBundleViewlet"
          permission="zope2.Public"
          />

    <!-- Define a page for the myExampleMenuOne menu item, defined by the page template file
         in the subdirectory templates, in the file myExampleMenuOne.pt.  This pt file provides
         the link to the drop-down menus defined in the objects.xml file via the line with
               menu_id string:ExampleOneMenuObjects_list

         The name field in the following page definitions must match with the any value of an 
         "action" field that is defined in the factory_type_information of an object class.  

         If there is a valid, reachable myExampleMenuOne.pt in the ZenPack skins directory 
         then this new-style zcml wiring takes precedence.
    
         The "for" field defines what objects this page definition is valid for.
         for="*" would be valid for everything.  for="../ExampleDevice.ExampleDevice"  
         would limit it to just objects of type ExampleDevice as defined in the parent of this directory.
         If there are valid definitions both here and in the ZenPack skins directory and the zcml has a 
         limiting "for" field, then this will prevail for those objects it matches and the version
         in the skins dir will prevail otherwise.

         TODO:  Change the myExampleMenuOne stuff to use router / facade mechanism rather than pt files.


    -->

    <page
        name="myExampleMenuOne"
        for="..ExampleDevice.ExampleDevice"
        template="templates/myExampleMenuOne.pt"
        permission="zenoss.View"
        />

    <!-- myExampleMenuTwo is applicable only to ExampleDevice objects in for field -->

    <page
        name="myExampleMenuTwo"
        for="..ExampleDevice.ExampleDevice"
        template="templates/myExampleMenuTwo.pt"
        permission="zenoss.View"
        />

    <!-- Next two stanzas are for the dropdown menus that are defined in
         objects.xml.  The name field must match with the action field in the MenuItem
         definition in objects.xml (ie. myDropDownMenu1 / myDropDownMenu2 ).  The layout
         for these menus is in templates/myDropDownMenu1.pt and
         templates/myDropDownMenu2.pt respectively.

         myDropDownMenu1 deliberately limits the scope to 
            for="..ExampleDevice.ExampleDevice"
         as templates/myDropDownMenu1.pt uses the createComment method which is only
         defined for the ExampleDevice object class.  The result is that for devices of
         other object classes, the submit window simply hangs and can be closed harmlessly.
 
         For ExampleDevice devices note that after clicking the OK button, control is 
         returned to the defaultdetails view as this is the default view as defined in 
         the factory information for a device.
    -->

    <page
        name="myDropDownMenu1"
        for="..ExampleDevice.ExampleDevice"
        template="templates/myDropDownMenu1.pt"
        permission="zenoss.View"
        />

    <page
        name="myDropDownMenu2"
        for="*"
        template="templates/myDropDownMenu2.pt"
        permission="zenoss.View"
        />


    <!--
        Next page definition is to override the default Modifications menu
        Note that the viewHistory.pt in the templates subdir has to be slightly
        modified from that in $ZENHOME/Products/ZenModel/skins/zenmodel as  
        "test" is not defined when run from configure.zcml 

        Note that this particular override of the Modifications left-hand menu
        is only valid for devices of object class ExampleDevice.
    -->

    <page
        name="viewHistory"
        for="..ExampleDevice.ExampleDevice"
        template="templates/viewHistory.pt"
        permission="zenoss.View"
        />

</configure>
